{"version":3,"sources":["containers/MainPage.tsx","components/AboutCard.tsx","components/timeline/TimelineCard.tsx","components/MyTimeline.tsx","containers/About.tsx","components/GiphyCard.tsx","containers/Giphy.tsx","containers/GiphyContainer.tsx","store/giphy/actions.ts","store/giphy/types.ts","components/Indicator.tsx","themes/base.ts","themes/light.ts","themes/dark.ts","components/ThemeProvider.tsx","components/Navbar.tsx","layouts/Layout.tsx","App.tsx","serviceWorker.ts","store/giphy/reducers.ts","store/index.ts","index.tsx","logo.svg"],"names":["useStyles","makeStyles","theme","createStyles","mainRoot","height","display","flexDirection","alignItems","justifyContent","mainContent","text","textAlign","button","marginRight","spacing","MainPage","classes","className","src","logo","alt","Box","mb","Typography","variant","m","Button","component","RouterLink","to","color","root","marginTop","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","AboutCard","React","useState","expanded","setExpanded","Card","elevation","CardHeader","title","subheader","CardActionArea","CardMedia","image","CardContent","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","fontSize","chip","margin","TimelineCard","item","date","titleTypographyProps","chips","map","Chip","key","label","size","Boolean","id","content","website","Link","href","MyTimeline","Timeline","align","items","Icon","icon","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Code","BookOutlined","WorkOutline","aboutRoot","aboutContainer","flex","aboutContent","About","startIcon","Grid","container","xs","sm","GiphyCard","gif","import_datetime","images","original","url","giphyRoot","textField","Giphy","gifs","isFetching","error","giphyCall","useForm","register","handleSubmit","errors","onSubmit","term","autoComplete","TextField","name","placeholder","fullWidth","defaultValue","inputRef","required","value","message","helperText","Divider","CircularProgress","length","md","lg","mapDispatchToProps","dispatch","a","type","payload","Axios","get","process","response","data","connect","giphy","indicator","Indicator","children","isLoading","setLoading","useEffect","LinearProgress","themeMap","lightTheme","createMuiTheme","palette","darkTheme","ThemeContext","createContext","undefined","ThemeProvider","props","currentTheme","localStorage","getItem","themeName","setThemeName","console","log","useMemo","Provider","_setThemeName","window","setItem","flexGrow","fontWeight","Navbar","themeContext","useContext","AppBar","position","Toolbar","overflow","wrapper","contentContainer","Layout","boxSizing","padding","html","width","body","App","exact","path","GiphyContainer","location","hostname","match","initialState","rootReducer","combineReducers","state","action","composeEnhancers","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.8d8b18ea.chunk.js","sourcesContent":["import React, { FC } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport logo from '../logo.svg'\r\nimport '../App.css'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Button, Typography, Box } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    mainRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    mainContent: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    text: {\r\n      textAlign: 'center',\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n)\r\n\r\nconst MainPage: FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.mainRoot}>\r\n      <div className={classes.mainContent}>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Box mb={2} textAlign=\"center\">\r\n          <Typography variant=\"h6\">Welcome to my portfolio</Typography>\r\n          <Typography variant=\"caption\">This website is powered by React / Redux / TypeScript</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" m={1}>\r\n          <Button component={RouterLink} to=\"/about\" color=\"default\" variant=\"outlined\" className={classes.button}>\r\n            show about\r\n          </Button>\r\n          <Button component={RouterLink} to=\"/giphy\" color=\"default\" variant=\"outlined\">\r\n            giphy\r\n          </Button>\r\n        </Box>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import React, { FC } from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Collapse,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ShareIcon from '@material-ui/icons/Share'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: theme.spacing(2),\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n)\r\n\r\nconst AboutCard: FC = () => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={4}>\r\n      <CardHeader title=\"Atilla Cantay Gül\" subheader=\"May 25, 1998\" />\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image=\"https://res.cloudinary.com/dfgpewwii/image/upload/v1593178251/Project%20Nilvier/me.jpg\"\r\n          title=\"me\"\r\n        />\r\n      </CardActionArea>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Hey! I am a new graduated and working on Frontend and Backend Development.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\nexport default AboutCard\r\n","import React, { FC, useState } from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Collapse,\r\n  IconButton,\r\n  Typography,\r\n  Link,\r\n  Chip,\r\n  Paper,\r\n} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { ITimelineItem } from '../../types'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    chip: {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  }),\r\n)\r\n\r\ntype TimelineCardProps = Omit<ITimelineItem, 'icon'>\r\n\r\nconst TimelineCard: FC<TimelineCardProps> = item => {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = useState<string | number>()\r\n\r\n  const handleExpandClick = (id: number) => {\r\n    if (expanded === id) {\r\n      setExpanded('')\r\n    } else {\r\n      setExpanded(id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title={item.title} subheader={item.date} titleTypographyProps={{ variant: 'body1' }} />\r\n      <CardContent>\r\n        {item.chips &&\r\n          item.chips.map(chip => <Chip key={chip.key} label={chip.label} className={classes.chip} size=\"small\" />)}\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: Boolean(expanded),\r\n          })}\r\n          onClick={() => handleExpandClick(item.id)}\r\n          aria-expanded={Boolean(expanded)}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={item.id === expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography>\r\n            {item.content}\r\n            {item.website && <Link href={item.website}>Link to Website</Link>}\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TimelineCard\r\n","import React, { FC } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Timeline,\r\n  TimelineItem,\r\n  TimelineSeparator,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n} from '@material-ui/lab'\r\nimport { Code, BookOutlined, WorkOutline } from '@material-ui/icons'\r\nimport TimelineCard from './timeline/TimelineCard'\r\nimport { ITimelineItem } from '../types'\r\n\r\nconst MyTimeline: FC = () => {\r\n  return (\r\n    <Timeline align=\"alternate\">\r\n      {items &&\r\n        items.map(item => {\r\n          const { id, icon: Icon } = item\r\n          return (\r\n            <TimelineItem key={id}>\r\n              <TimelineSeparator>\r\n                <TimelineDot color=\"inherit\">\r\n                  <Icon />\r\n                </TimelineDot>\r\n                <TimelineConnector />\r\n              </TimelineSeparator>\r\n              <TimelineContent>\r\n                <TimelineCard {...item} />\r\n              </TimelineContent>\r\n            </TimelineItem>\r\n          )\r\n        })}\r\n    </Timeline>\r\n  )\r\n}\r\n\r\nexport default MyTimeline\r\n\r\nconst items: ITimelineItem[] = [\r\n  {\r\n    id: 1,\r\n    icon: Code,\r\n    title: 'Résumé',\r\n    date: 'June 2020',\r\n    chips: [\r\n      { key: 0, label: 'reactjs' },\r\n      { key: 1, label: 'typescript' },\r\n      { key: 2, label: 'redux' },\r\n      { key: 3, label: 'material-ui' },\r\n      { key: 4, label: 'html' },\r\n      { key: 5, label: 'css' },\r\n    ],\r\n    content: 'The site you are viewing right now is the portfolio website I developed for myself',\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: Code,\r\n    title: 'Online Lawyer Search and Communication Platform (Thesis)',\r\n    date: 'June 2020',\r\n    chips: [\r\n      { key: 0, label: 'reactjs' },\r\n      { key: 1, label: 'redux' },\r\n      { key: 2, label: 'material-ui' },\r\n      { key: 3, label: 'node.js' },\r\n      { key: 4, label: 'mongodb' },\r\n      { key: 5, label: 'socket.io' },\r\n      { key: 6, label: 'jwt' },\r\n    ],\r\n    content:\r\n      'A website platform that aims to facilitate the access of lawyers to people who have a legal problem or who want to get counseling or cooperation on this legal problem. It includes the functionality of becoming a member, logging in, searching for a lawyer, creating an ad, viewing an ad, sharing an ad, friendship feature, realtime messaging and notification system and many more',\r\n    website: 'https://www.online-lawyer.herokuapp.com/',\r\n  },\r\n  {\r\n    id: 3,\r\n    icon: BookOutlined,\r\n    title: 'Computer Engineering (3.7/4), Pamukkale University',\r\n    date: 'Sep 2016 → Jun 2020',\r\n    content:\r\n      'Algorithm and programming, object oriented programming, data structures, matlab, linear algebra, programming languages, introduction to electrical and electronics engineering, probability and statistics, signal processing, microprocessors and microcomputers, formal languages and automata, operations research, logistics information systems, service systems, data communication and computer networks, parallel computing and software quality assurance... I have attended and successfully passed the important courses I mentioned above.',\r\n  },\r\n  {\r\n    id: 4,\r\n    icon: WorkOutline,\r\n    title: 'Software Intern at AlterNet',\r\n    date: 'Jun 2019 → Sep 2019 (4 months)',\r\n    chips: [\r\n      { key: 0, label: 'reactjs' },\r\n      { key: 1, label: 'redux' },\r\n      { key: 2, label: 'material-ui' },\r\n      { key: 3, label: 'node.js' },\r\n      { key: 4, label: 'express' },\r\n      { key: 5, label: 'mongodb' },\r\n      { key: 6, label: 'socket.io' },\r\n      { key: 7, label: 'html' },\r\n      { key: 8, label: 'css' },\r\n    ],\r\n    content:\r\n      'Contribution to the developed projects, Responsibilities and duties given were fulfilled, Example Project: Real-time note taking service development with React & Redux & Nodejs & MongoDB & WebSocket support',\r\n    website: 'https://www.atillacantay.herokuapp.com/',\r\n  },\r\n  {\r\n    id: 5,\r\n    icon: BookOutlined,\r\n    title: 'Computer Science (3.94/4), Bialystok University of Technology',\r\n    date: 'Sep 2018 → Feb 2019',\r\n    content:\r\n      'I have been involved in database systems, software engineering, computer graphics, computer architect and web development',\r\n  },\r\n]\r\n","import React, { FC } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport AboutCard from '../components/AboutCard'\r\nimport MyTimeline from '../components/MyTimeline'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Button, Grid } from '@material-ui/core'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    aboutRoot: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    aboutContainer: {\r\n      flex: 1,\r\n      margin: theme.spacing(3),\r\n    },\r\n    aboutContent: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n    },\r\n  }),\r\n)\r\n\r\nconst About: FC = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.aboutRoot}>\r\n      <div className={classes.aboutContainer}>\r\n        <div className={classes.aboutContent}>\r\n          <Button component={RouterLink} to=\"/\" variant=\"outlined\" startIcon={<ArrowBackIcon />}>\r\n            Back\r\n          </Button>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <AboutCard />\r\n            </Grid>\r\n            <Grid item xs={12} sm={8}>\r\n              <MyTimeline />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, IconButton } from '@material-ui/core'\r\n\r\nimport ShareIcon from '@material-ui/icons/Share'\r\nimport { Gif } from '../store/giphy/types'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n)\r\n\r\ntype Props = {\r\n  gif: Gif\r\n}\r\n\r\nconst GiphyCard: React.FC<Props> = ({ gif }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={4}>\r\n      <CardHeader title={gif.title || 'Unknown'} subheader={gif.import_datetime} />\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={gif.images.original.url} title=\"me\" />\r\n      </CardActionArea>\r\n      <CardContent>{gif.title}</CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GiphyCard\r\n","import React, { FC } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport GiphyCard from '../components/GiphyCard'\r\nimport { Gif } from '../store/giphy/types'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Box, Grid, TextField, Divider, CircularProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    giphyRoot: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    textField: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n  }),\r\n)\r\n\r\nexport interface GiphyStateProps {\r\n  gifs: Gif[]\r\n  isFetching: boolean\r\n  error?: string\r\n}\r\n\r\nexport interface GiphyDispatchProps {\r\n  giphyCall: (term: string) => void\r\n}\r\n\r\ntype FormData = {\r\n  term: string\r\n}\r\n\r\ntype Props = GiphyStateProps & GiphyDispatchProps\r\n\r\nconst Giphy: FC<Props> = ({ gifs, isFetching, error, giphyCall }) => {\r\n  const classes = useStyles()\r\n  const { register, handleSubmit, errors } = useForm<FormData>()\r\n\r\n  const onSubmit = handleSubmit(({ term }) => {\r\n    giphyCall(term)\r\n  })\r\n\r\n  return (\r\n    <div className={classes.giphyRoot}>\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <form onSubmit={onSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                name=\"term\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Search\"\r\n                fullWidth\r\n                className={classes.textField}\r\n                defaultValue=\"\"\r\n                inputRef={register({ required: { value: true, message: 'Enter a search term' } })}\r\n                error={!!errors.term}\r\n                helperText={errors.term && errors.term.message}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box m={2}>\r\n              {isFetching && <CircularProgress color=\"primary\" />}\r\n              {!error && gifs.length > 0 && (\r\n                <Grid container spacing={4}>\r\n                  {gifs.length > 0\r\n                    ? gifs.map((gif: Gif) => (\r\n                        <Grid key={gif.id} item xs={12} sm={6} md={4} lg={3}>\r\n                          <GiphyCard gif={gif} />\r\n                        </Grid>\r\n                      ))\r\n                    : 'null'}\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Giphy\r\n","import { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\r\nimport { giphyCall } from '../store/giphy/actions'\r\nimport { RootState } from '../store'\r\nimport Giphy, { GiphyStateProps, GiphyDispatchProps } from './Giphy'\r\n\r\nconst mapStateToProps: MapStateToProps<GiphyStateProps, unknown, RootState> = ({ giphy }) => ({\r\n  gifs: giphy.gifs,\r\n  isFetching: giphy.isFetching,\r\n  error: giphy.error,\r\n})\r\n\r\nconst mapDispatchToProps: MapDispatchToProps<GiphyDispatchProps, unknown> = {\r\n  giphyCall,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Giphy)\r\n","// src/store/giphy/actions.ts\r\n\r\nimport { ActionCreator } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { FETCH_GIPHY_REQUEST, FETCH_GIPHY_SUCCESS, FETCH_GIPHY_FAILURE, GiphyActionTypes } from './types'\r\nimport { RootState } from '..'\r\nimport Axios from 'axios'\r\n\r\nexport type AppThunk = ActionCreator<ThunkAction<void, RootState, null, GiphyActionTypes>>\r\n\r\nexport const giphyCall: AppThunk = (term: string) => async dispatch => {\r\n  dispatch({ type: FETCH_GIPHY_REQUEST, payload: {} })\r\n  try {\r\n    const response = await Axios.get(\r\n      `https://api.giphy.com/v1/gifs/search?q=${term}&api_key=${process.env.REACT_APP_GIPHY_API_KEY}`,\r\n    )\r\n    dispatch({ type: FETCH_GIPHY_SUCCESS, payload: { gifs: response.data.data } })\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_GIPHY_FAILURE, payload: {} })\r\n  }\r\n}\r\n","// src/store/giphy/types.ts\r\n\r\nexport const FETCH_GIPHY_REQUEST = 'FETCH_GIPHY_REQUEST'\r\nexport const FETCH_GIPHY_SUCCESS = 'FETCH_GIPHY_SUCCESS'\r\nexport const FETCH_GIPHY_FAILURE = 'FETCH_GIPHY_FAILURE'\r\n\r\n//Giphy Gif Object\r\nexport interface Gif {\r\n  id: string\r\n  title: string\r\n  import_datetime: string\r\n  username: string\r\n  images: {\r\n    original: {\r\n      url: string\r\n    }\r\n  }\r\n}\r\n\r\n//Giphy Store State\r\nexport interface GiphyState {\r\n  gifs: Gif[]\r\n  isFetching: boolean\r\n  error?: string\r\n}\r\n\r\n//Giphy Request Action\r\nexport interface FetchGiphyRequestAction {\r\n  type: typeof FETCH_GIPHY_REQUEST\r\n  payload: {\r\n    //no props\r\n  }\r\n}\r\n\r\n//Giphy Success Action\r\nexport interface FetchGiphySuccessAction {\r\n  type: typeof FETCH_GIPHY_SUCCESS\r\n  payload: {\r\n    gifs: Gif[]\r\n  }\r\n}\r\n\r\n//Giphy Failure Action\r\nexport interface FetchGiphyFailureAction {\r\n  type: typeof FETCH_GIPHY_FAILURE\r\n  payload: {\r\n    //no props\r\n  }\r\n}\r\n\r\nexport type GiphyActionTypes = FetchGiphyRequestAction | FetchGiphySuccessAction | FetchGiphyFailureAction\r\n","import React, { useState, useEffect, FC } from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    indicator: {\r\n      height: 5,\r\n    },\r\n  }),\r\n)\r\n\r\nconst Indicator: FC = ({ children }) => {\r\n  const classes = useStyles()\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  if (isLoading) return <LinearProgress className={classes.indicator} />\r\n\r\n  return <>{children}</>\r\n}\r\n\r\nexport default Indicator\r\n","import { Theme } from '@material-ui/core'\r\nimport { lightTheme } from './light'\r\nimport { darkTheme } from './dark'\r\n\r\nexport function themeCreator(theme: string): Theme {\r\n  return themeMap[theme]\r\n}\r\n\r\nexport const themeMap: { [key: string]: Theme } = {\r\n  lightTheme,\r\n  darkTheme,\r\n}\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n})\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n})\r\n","import React, { useState, createContext, FC } from 'react'\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core'\r\nimport { themeCreator } from '../themes/base'\r\nimport { themeMap } from '../themes/base'\r\n\r\ntype ThemeContextType = {\r\n  themeName: string\r\n  _setThemeName: () => void\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined)\r\n\r\nconst ThemeProvider: FC = props => {\r\n  // Read current theme from localStorage or maybe from an api\r\n  const currentTheme = localStorage.getItem('theme') || 'lightTheme'\r\n\r\n  // State to hold the selected theme name\r\n  const [themeName, setThemeName] = useState(currentTheme)\r\n\r\n  // Wrap _setThemeName to store new theme names in localStorage\r\n  const _setThemeName = (): void => {\r\n    if (themeName === 'lightTheme') {\r\n      window.localStorage.setItem('theme', 'darkTheme')\r\n      setThemeName('darkTheme')\r\n    } else if (themeName === 'darkTheme') {\r\n      window.localStorage.setItem('theme', 'lightTheme')\r\n      setThemeName('lightTheme')\r\n    }\r\n  }\r\n\r\n  // Retrieve the theme object by theme name\r\n  //const theme = themeCreator(themeName)\r\n\r\n  console.log(themeMap[themeName])\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        palette: {\r\n          type: themeName === 'darkTheme' ? 'dark' : 'light',\r\n        },\r\n      }),\r\n    [themeName],\r\n  )\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        themeName,\r\n        _setThemeName,\r\n      }}\r\n    >\r\n      <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ThemeProvider\r\n","import React, { FC, useContext } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, IconButton, Button, Box } from '@material-ui/core'\r\nimport { ThemeContext } from './ThemeProvider'\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      fontSize: '16px',\r\n      fontWeight: 'bold',\r\n    },\r\n  }),\r\n)\r\n\r\nconst Navbar: FC = () => {\r\n  const classes = useStyles()\r\n\r\n  // Get the setter function from context\r\n  const themeContext = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Box flexGrow={1}>\r\n            <Button component={RouterLink} to=\"/\" variant=\"text\" size=\"large\" color=\"inherit\" className={classes.title}>\r\n              Project Nilvier\r\n            </Button>\r\n          </Box>\r\n          <IconButton color=\"inherit\" onClick={() => themeContext?._setThemeName()}>\r\n            {themeContext?.themeName === 'lightTheme' ? <Brightness4Icon /> : <Brightness7Icon />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\nexport default Navbar\r\n","import React, { FC } from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/core'\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      overflow: 'hidden',\r\n    },\r\n    contentContainer: {\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      overflow: 'hidden',\r\n    },\r\n    content: {\r\n      flex: '1 1 auto',\r\n      height: '100%',\r\n      overflow: 'auto',\r\n    },\r\n  }),\r\n)\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainPage from './containers/MainPage'\nimport About from './containers/About'\nimport GiphyContainer from './containers/GiphyContainer'\n\nimport Indicator from './components/Indicator'\nimport Layout from './layouts/Layout'\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        height: '100%',\n        width: '100%',\n      },\n      '#root': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  }),\n)\n\nconst App: React.FC = () => {\n  useStyles()\n  return (\n    <Indicator>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/giphy\" component={GiphyContainer} />\n          </Switch>\n        </Layout>\n      </Router>\n    </Indicator>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GiphyState, GiphyActionTypes, FETCH_GIPHY_REQUEST, FETCH_GIPHY_SUCCESS, FETCH_GIPHY_FAILURE } from './types'\r\n\r\nexport const initialState: GiphyState = {\r\n  gifs: [],\r\n  isFetching: false,\r\n  error: undefined,\r\n}\r\n\r\nexport function giphyReducer(state = initialState, action: GiphyActionTypes): GiphyState {\r\n  switch (action.type) {\r\n    case FETCH_GIPHY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: undefined,\r\n      }\r\n    case FETCH_GIPHY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        gifs: action.payload.gifs,\r\n      }\r\n    case FETCH_GIPHY_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: 'Error occured',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { giphyReducer } from './giphy/reducers'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport const rootReducer = combineReducers({\r\n  giphy: giphyReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport './index.css'\nimport App from './App'\nimport { CssBaseline } from '@material-ui/core'\nimport * as serviceWorker from './serviceWorker'\n\nimport ThemeProvider from './components/ThemeProvider'\nimport { rootReducer } from './store/index'\n\nconst composeEnhancers =\n  (process.env.NODE_ENV === 'development' && window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}