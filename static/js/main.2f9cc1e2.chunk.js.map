{"version":3,"sources":["containers/MainPage.tsx","components/AboutCard.tsx","containers/About.tsx","components/GiphyCard.tsx","containers/Giphy.tsx","containers/GiphyContainer.tsx","store/giphy/actions.ts","store/giphy/types.ts","components/Indicator.tsx","themes/base.ts","themes/light.ts","themes/dark.ts","components/ThemeProvider.tsx","components/Navbar.tsx","layouts/Layout.tsx","App.tsx","serviceWorker.ts","store/giphy/reducers.ts","store/index.ts","index.tsx","logo.svg"],"names":["useStyles","makeStyles","theme","createStyles","button","marginRight","spacing","MainPage","classes","className","src","logo","alt","Box","mb","Typography","variant","display","m","Button","component","RouterLink","to","color","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","AboutCard","React","useState","expanded","setExpanded","Card","CardHeader","title","subheader","CardActionArea","CardMedia","image","CardContent","CardActions","disableSpacing","IconButton","aria-label","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","aboutRoot","flexDirection","alignItems","About","Grid","container","item","xs","GiphyCard","gif","elevation","import_datetime","images","original","url","giphyRoot","margin","textField","Giphy","gifs","isFetching","error","giphyCall","useForm","register","handleSubmit","errors","onSubmit","term","autoComplete","TextField","name","placeholder","fullWidth","defaultValue","inputRef","required","value","message","helperText","Divider","CircularProgress","length","map","key","id","sm","md","lg","mapDispatchToProps","dispatch","a","type","payload","Axios","get","process","response","data","connect","giphy","indicator","Indicator","props","isLoading","setLoading","useEffect","LinearProgress","children","themeMap","lightTheme","createMuiTheme","palette","darkTheme","ThemeContext","createContext","undefined","ThemeProvider","currentTheme","localStorage","getItem","themeName","setThemeName","themeCreator","console","log","Provider","_setThemeName","window","setItem","flexGrow","Navbar","themeContext","useContext","AppBar","position","Toolbar","overflow","contentContainer","flex","wrapper","content","Layout","App","exact","path","GiphyContainer","Boolean","location","hostname","match","initialState","rootReducer","combineReducers","state","action","composeEnhancers","compose","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.2f9cc1e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport logo from '../logo.svg'\r\nimport '../App.css'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Button, Typography, Box } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n)\r\n\r\nconst MainPage = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Box mb={2}>\r\n          <Typography variant=\"h6\">Welcome to my portfolio</Typography>\r\n          <Typography variant=\"caption\">This website is powered by React / Redux / TypeScript</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" m={1}>\r\n          <Button component={RouterLink} to=\"/about\" color=\"inherit\" variant=\"outlined\" className={classes.button}>\r\n            show about\r\n          </Button>\r\n          <Button component={RouterLink} to=\"/giphy\" color=\"inherit\" variant=\"outlined\">\r\n            giphy\r\n          </Button>\r\n        </Box>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  CardActionArea,\r\n  Collapse,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport ShareIcon from '@material-ui/icons/Share'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n)\r\n\r\nexport default function AboutCard() {\r\n  const classes = useStyles()\r\n  const [expanded, setExpanded] = React.useState(false)\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Atilla Cantay Gül\" subheader=\"May 25, 1998\" />\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image=\"/static/images/cards/paella.jpg\" title=\"me\" />\r\n      </CardActionArea>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of\r\n          frozen peas along with the mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Method:</Typography>\r\n          <Typography paragraph>\r\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10 minutes.\r\n          </Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Button, Box, Grid } from '@material-ui/core'\r\nimport AboutCard from '../components/AboutCard'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    aboutRoot: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n  }),\r\n)\r\n\r\nconst About = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.aboutRoot}>\r\n      <Box>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AboutCard />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Button component={RouterLink} to=\"/\">\r\n        Back\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { Card, CardHeader, CardMedia, CardContent, CardActions, CardActionArea, IconButton } from '@material-ui/core'\r\n\r\nimport ShareIcon from '@material-ui/icons/Share'\r\nimport { Gif } from '../store/giphy/types'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n  }),\r\n)\r\n\r\ntype Props = {\r\n  gif: Gif\r\n}\r\n\r\nconst GiphyCard: React.FC<Props> = ({ gif }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Card className={classes.root} elevation={4}>\r\n      <CardHeader title={gif.title || 'Unknown'} subheader={gif.import_datetime} />\r\n      <CardActionArea>\r\n        <CardMedia className={classes.media} image={gif.images.original.url} title=\"me\" />\r\n      </CardActionArea>\r\n      <CardContent>{gif.title}</CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GiphyCard\r\n","import React, { FC } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport GiphyCard from '../components/GiphyCard'\r\nimport { Gif } from '../store/giphy/types'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Box, Grid, TextField, Divider, CircularProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    giphyRoot: {\r\n      margin: theme.spacing(2),\r\n    },\r\n    textField: {\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n  }),\r\n)\r\n\r\nexport interface GiphyStateProps {\r\n  gifs: Gif[]\r\n  isFetching: boolean\r\n  error?: string\r\n}\r\n\r\nexport interface GiphyDispatchProps {\r\n  giphyCall: (term: string) => void\r\n}\r\n\r\ntype FormData = {\r\n  term: string\r\n}\r\n\r\ntype Props = GiphyStateProps & GiphyDispatchProps\r\n\r\nconst Giphy: FC<Props> = ({ gifs, isFetching, error, giphyCall }) => {\r\n  const classes = useStyles()\r\n  const { register, handleSubmit, errors } = useForm<FormData>()\r\n\r\n  const onSubmit = handleSubmit(({ term }) => {\r\n    giphyCall(term)\r\n  })\r\n\r\n  return (\r\n    <div className={classes.giphyRoot}>\r\n      <div>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <form onSubmit={onSubmit} autoComplete=\"off\">\r\n              <TextField\r\n                name=\"term\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Search\"\r\n                fullWidth\r\n                className={classes.textField}\r\n                defaultValue=\"\"\r\n                inputRef={register({ required: { value: true, message: 'Enter a search term' } })}\r\n                error={!!errors.term}\r\n                helperText={errors.term && errors.term.message}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box m={2}>\r\n              {isFetching && <CircularProgress color=\"primary\" />}\r\n              {!error && gifs.length > 0 && (\r\n                <Grid container spacing={4}>\r\n                  {gifs.length > 0\r\n                    ? gifs.map((gif: Gif) => (\r\n                        <Grid key={gif.id} item xs={12} sm={6} md={4} lg={3}>\r\n                          <GiphyCard gif={gif} />\r\n                        </Grid>\r\n                      ))\r\n                    : 'null'}\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Giphy\r\n","import { connect, MapStateToProps, MapDispatchToProps } from 'react-redux'\r\nimport { giphyCall } from '../store/giphy/actions'\r\nimport { RootState } from '../store'\r\nimport Giphy, { GiphyStateProps, GiphyDispatchProps } from './Giphy'\r\n\r\nconst mapStateToProps: MapStateToProps<GiphyStateProps, unknown, RootState> = ({ giphy }) => ({\r\n  gifs: giphy.gifs,\r\n  isFetching: giphy.isFetching,\r\n  error: giphy.error,\r\n})\r\n\r\nconst mapDispatchToProps: MapDispatchToProps<GiphyDispatchProps, unknown> = {\r\n  giphyCall,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Giphy)\r\n","// src/store/giphy/actions.ts\r\n\r\nimport { ActionCreator } from 'redux'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { FETCH_GIPHY_REQUEST, FETCH_GIPHY_SUCCESS, FETCH_GIPHY_FAILURE, GiphyActionTypes } from './types'\r\nimport { RootState } from '..'\r\nimport Axios from 'axios'\r\n\r\nexport type AppThunk = ActionCreator<ThunkAction<void, RootState, null, GiphyActionTypes>>\r\n\r\nexport const giphyCall: AppThunk = (term: string) => async dispatch => {\r\n  dispatch({ type: FETCH_GIPHY_REQUEST, payload: {} })\r\n  try {\r\n    const response = await Axios.get(\r\n      `http://api.giphy.com/v1/gifs/search?q=${term}&api_key=${process.env.REACT_APP_GIPHY_API_KEY}`,\r\n    )\r\n    dispatch({ type: FETCH_GIPHY_SUCCESS, payload: { gifs: response.data.data } })\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_GIPHY_FAILURE, payload: {} })\r\n  }\r\n}\r\n","// src/store/giphy/types.ts\r\n\r\nexport const FETCH_GIPHY_REQUEST = 'FETCH_GIPHY_REQUEST'\r\nexport const FETCH_GIPHY_SUCCESS = 'FETCH_GIPHY_SUCCESS'\r\nexport const FETCH_GIPHY_FAILURE = 'FETCH_GIPHY_FAILURE'\r\n\r\n//Giphy Gif Object\r\nexport interface Gif {\r\n  id: string\r\n  title: string\r\n  import_datetime: string\r\n  username: string\r\n  images: {\r\n    original: {\r\n      url: string\r\n    }\r\n  }\r\n}\r\n\r\n//Giphy Store State\r\nexport interface GiphyState {\r\n  gifs: Gif[]\r\n  isFetching: boolean\r\n  error?: string\r\n}\r\n\r\n//Giphy Request Action\r\nexport interface FetchGiphyRequestAction {\r\n  type: typeof FETCH_GIPHY_REQUEST\r\n  payload: {\r\n    //no props\r\n  }\r\n}\r\n\r\n//Giphy Success Action\r\nexport interface FetchGiphySuccessAction {\r\n  type: typeof FETCH_GIPHY_SUCCESS\r\n  payload: {\r\n    gifs: Gif[]\r\n  }\r\n}\r\n\r\n//Giphy Failure Action\r\nexport interface FetchGiphyFailureAction {\r\n  type: typeof FETCH_GIPHY_FAILURE\r\n  payload: {\r\n    //no props\r\n  }\r\n}\r\n\r\nexport type GiphyActionTypes = FetchGiphyRequestAction | FetchGiphySuccessAction | FetchGiphyFailureAction\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { LinearProgress } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    indicator: {\r\n      height: 5,\r\n    },\r\n  }),\r\n)\r\n\r\nconst Indicator = (props: any) => {\r\n  const classes = useStyles()\r\n  const [isLoading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  if (isLoading) return <LinearProgress className={classes.indicator} />\r\n\r\n  return props.children\r\n}\r\n\r\nexport default Indicator\r\n","import { Theme } from '@material-ui/core'\r\nimport { lightTheme } from './light'\r\nimport { darkTheme } from './dark'\r\n\r\nexport function themeCreator(theme: string): Theme {\r\n  return themeMap[theme]\r\n}\r\n\r\nconst themeMap: { [key: string]: Theme } = {\r\n  lightTheme,\r\n  darkTheme,\r\n}\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n})\r\n","import { createMuiTheme } from '@material-ui/core'\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n})\r\n","import React, { useState, createContext, FC } from 'react'\r\nimport { MuiThemeProvider } from '@material-ui/core'\r\nimport { themeCreator } from '../themes/base'\r\n\r\ntype ThemeContextType = {\r\n  themeName: string\r\n  _setThemeName: () => void\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextType | undefined>(undefined)\r\n\r\nconst ThemeProvider: FC = props => {\r\n  // Read current theme from localStorage or maybe from an api\r\n  const currentTheme = localStorage.getItem('theme') || 'lightTheme'\r\n\r\n  // State to hold the selected theme name\r\n  const [themeName, setThemeName] = useState(currentTheme)\r\n\r\n  // Wrap _setThemeName to store new theme names in localStorage\r\n  const _setThemeName = (): void => {\r\n    if (currentTheme === 'lightTheme') {\r\n      window.localStorage.setItem('theme', 'darkTheme')\r\n      setThemeName('darkTheme')\r\n    } else if (currentTheme === 'darkTheme') {\r\n      window.localStorage.setItem('theme', 'lightTheme')\r\n      setThemeName('lightTheme')\r\n    }\r\n  }\r\n\r\n  // Retrieve the theme object by theme name\r\n  const theme = themeCreator(themeName)\r\n\r\n  console.log(theme)\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        themeName,\r\n        _setThemeName,\r\n      }}\r\n    >\r\n      <MuiThemeProvider theme={theme}>{props.children}</MuiThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ThemeProvider\r\n","import React, { FC, useContext } from 'react'\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core'\r\nimport { ThemeContext } from './ThemeProvider'\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4'\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n)\r\n\r\nconst Navbar: FC = () => {\r\n  const classes = useStyles()\r\n\r\n  // Get the setter function from context\r\n  const themeContext = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Project Nilvier\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={() => themeContext?._setThemeName()}>\r\n            {themeContext?.themeName === 'lightTheme' ? <Brightness4Icon /> : <Brightness7Icon />}\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\nexport default Navbar\r\n","import React, { FC } from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/core'\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%',\r\n      overflow: 'hidden',\r\n    },\r\n    contentContainer: {\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      overflow: 'hidden',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flex: '1 1 auto',\r\n      overflow: 'hidden',\r\n    },\r\n    content: {\r\n      flex: '1 1 auto',\r\n      height: '100%',\r\n      overflow: 'auto',\r\n    },\r\n  }),\r\n)\r\n\r\nconst Layout: FC = ({ children }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Navbar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainPage from './containers/MainPage'\nimport About from './containers/About'\nimport GiphyContainer from './containers/GiphyContainer'\n\nimport Indicator from './components/Indicator'\nimport Layout from './layouts/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <Indicator>\n      <Router>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/giphy\" component={GiphyContainer} />\n          </Switch>\n        </Layout>\n      </Router>\n    </Indicator>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GiphyState, GiphyActionTypes, FETCH_GIPHY_REQUEST, FETCH_GIPHY_SUCCESS, FETCH_GIPHY_FAILURE } from './types'\r\n\r\nexport const initialState: GiphyState = {\r\n  gifs: [],\r\n  isFetching: false,\r\n  error: undefined,\r\n}\r\n\r\nexport function giphyReducer(state = initialState, action: GiphyActionTypes): GiphyState {\r\n  switch (action.type) {\r\n    case FETCH_GIPHY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: undefined,\r\n      }\r\n    case FETCH_GIPHY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        gifs: action.payload.gifs,\r\n      }\r\n    case FETCH_GIPHY_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: 'Error occured',\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { giphyReducer } from './giphy/reducers'\r\nimport { combineReducers } from 'redux'\r\n\r\nexport const rootReducer = combineReducers({\r\n  giphy: giphyReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport reduxThunk from 'redux-thunk'\nimport './index.css'\nimport App from './App'\nimport { CssBaseline } from '@material-ui/core'\nimport * as serviceWorker from './serviceWorker'\n\nimport ThemeProvider from './components/ThemeProvider'\nimport { rootReducer } from './store/index'\n\nconst composeEnhancers =\n  (process.env.NODE_ENV === 'development' && window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(reduxThunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider>\n        <CssBaseline />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}